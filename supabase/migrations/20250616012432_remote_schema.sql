

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."content" (
    "id" bigint NOT NULL,
    "title" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "content" "text",
    "cover_image_url" "text",
    "tag_id" bigint,
    "language_id" bigint
);


ALTER TABLE "public"."content" OWNER TO "postgres";


COMMENT ON TABLE "public"."content" IS 'stories, transcripts, texts';



ALTER TABLE "public"."content" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."content_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."content_tags" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL
);


ALTER TABLE "public"."content_tags" OWNER TO "postgres";


COMMENT ON TABLE "public"."content_tags" IS 'tags to assign to content';



ALTER TABLE "public"."content_tags" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."content_tags_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."languages" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL
);


ALTER TABLE "public"."languages" OWNER TO "postgres";


COMMENT ON TABLE "public"."languages" IS 'possible languages to create content in or learn';



ALTER TABLE "public"."languages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."languages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."phrases" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "phrase" "text" NOT NULL,
    "definition" "text",
    "language_id" bigint,
    "level" bigint NOT NULL,
    CONSTRAINT "phrases_level_check" CHECK ((("level" >= 1) AND ("level" <= 5)))
);


ALTER TABLE "public"."phrases" OWNER TO "postgres";


COMMENT ON TABLE "public"."phrases" IS 'words or phrases or sentences';



ALTER TABLE "public"."phrases" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."phrases_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."content"
    ADD CONSTRAINT "content_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."content_tags"
    ADD CONSTRAINT "content_tags_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."content_tags"
    ADD CONSTRAINT "content_tags_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."languages"
    ADD CONSTRAINT "languages_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."languages"
    ADD CONSTRAINT "languages_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."phrases"
    ADD CONSTRAINT "phrases_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."content"
    ADD CONSTRAINT "content_language_id_fkey" FOREIGN KEY ("language_id") REFERENCES "public"."languages"("id");



ALTER TABLE ONLY "public"."content"
    ADD CONSTRAINT "content_tag_id_fkey" FOREIGN KEY ("tag_id") REFERENCES "public"."content_tags"("id");



ALTER TABLE ONLY "public"."phrases"
    ADD CONSTRAINT "phrases_language_id_fkey" FOREIGN KEY ("language_id") REFERENCES "public"."languages"("id");



CREATE POLICY "Enable delete for all users" ON "public"."content" FOR DELETE USING (true);



CREATE POLICY "Enable delete for all users" ON "public"."phrases" FOR DELETE USING (true);



CREATE POLICY "Enable delete for all users on content_tags" ON "public"."content_tags" FOR DELETE USING (true);



CREATE POLICY "Enable insert for all users" ON "public"."content" FOR INSERT WITH CHECK (true);



CREATE POLICY "Enable insert for all users" ON "public"."phrases" FOR INSERT WITH CHECK (true);



CREATE POLICY "Enable insert for all users on content_tags" ON "public"."content_tags" FOR INSERT WITH CHECK (true);



CREATE POLICY "Enable insert, update for users" ON "public"."content" USING (true) WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON "public"."content" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."languages" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."phrases" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users on content_tags" ON "public"."content_tags" FOR SELECT USING (true);



CREATE POLICY "Enable update for all users" ON "public"."content" FOR UPDATE USING (true);



CREATE POLICY "Enable update for all users" ON "public"."phrases" FOR UPDATE USING (true);



CREATE POLICY "Enable update for all users on content_tags" ON "public"."content_tags" FOR UPDATE USING (true);



ALTER TABLE "public"."content" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."content_tags" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."languages" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."phrases" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."content" TO "anon";
GRANT ALL ON TABLE "public"."content" TO "authenticated";
GRANT ALL ON TABLE "public"."content" TO "service_role";



GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."content_tags" TO "anon";
GRANT ALL ON TABLE "public"."content_tags" TO "authenticated";
GRANT ALL ON TABLE "public"."content_tags" TO "service_role";



GRANT ALL ON SEQUENCE "public"."content_tags_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."content_tags_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."content_tags_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."languages" TO "anon";
GRANT ALL ON TABLE "public"."languages" TO "authenticated";
GRANT ALL ON TABLE "public"."languages" TO "service_role";



GRANT ALL ON SEQUENCE "public"."languages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."languages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."languages_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."phrases" TO "anon";
GRANT ALL ON TABLE "public"."phrases" TO "authenticated";
GRANT ALL ON TABLE "public"."phrases" TO "service_role";



GRANT ALL ON SEQUENCE "public"."phrases_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."phrases_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."phrases_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
